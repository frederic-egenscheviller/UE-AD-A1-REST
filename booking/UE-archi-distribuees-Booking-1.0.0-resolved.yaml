---
openapi: 3.1.0
info:
  title: Booking API
  description: This is the API of the Booking service
  contact:
    email: helene.coullon@imt-atlantique.fr
  license:
    name: GPL v3
    url: https://www.gnu.org/licenses/gpl-3.0.en.html
  version: 1.0.0
tags:
  - name: developers
    description: Operations available to regular developers
paths:
  /:
    get:
      tags:
        - developers
      summary: Home page of the service
      description: Nothing to do
      operationId: home
      responses:
        "200":
          description: Welcome message
          content:
            text/html:
              schema:
                type: string
                example: "<h1 style='color:blue'>Welcome to the Booking service!</h1>"
  /bookings:
    get:
      tags:
        - developers
      summary: Get the full JSON database
      description: Nothing to do
      operationId: get_json
      responses:
        "200":
          description: Full JSON
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllBookings'
    post:
      tags:
        - admins
      summary: Add a booking for a user
      description: Adds a booking for the user. The service showtimes have to be requested to check the validity of the booking that is asked.
      operationId: add_booking_byuser
      parameters:
        - name: userid
          in: path
          description: User ID.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: Item to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewMovie'
      responses:
        "200":
          description: Booking created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingsUser'
        "409":
          description: An existing item already exists
  /bookings/{userid}:
    get:
      tags:
        - developers
      summary: Get the bookings from a user ID
      description: By passing in the appropriate options, you can get bookings of a user
      operationId: get_booking_for_user
      parameters:
        - name: userid
          in: path
          description: User ID.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Bookings of the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingsUser'
        "400":
          description: Bad input parameter
    put:
      tags:
        - developers
      summary: Update booking information for a specific user by user ID
      operationId: update_booking_byuser
      parameters:
        - name: userid
          in: path
          description: User ID.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: Updated booking information
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingsUser'
      responses:
        "200":
          description: Updated booking information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingsUser'
        "400":
          description: Bad input parameter
    delete:
      tags:
        - developers
      summary: Delete a booking for a specific user by user ID
      operationId: delete_booking_byuser
      parameters:
        - name: userid
          in: path
          description: User ID.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Deleted booking information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingsUser'
        "400":
          description: Bad input parameter
components:
  schemas:
    AllBookings:
      type: array
      items:
        $ref: '#/components/schemas/BookingsUser'
    BookingsUser:
      required:
        - dates
        - userid
      type: object
      properties:
        userid:
          type: string
          example: chris_rivers
        dates:
          type: array
          items:
            $ref: '#/components/schemas/DateItem'
    DateItem:
      required:
        - date
        - movies
      type: object
      properties:
        date:
          type: string
          example: "20151201"
        movies:
          type: array
          items:
            type: string
            example: 276c79ec-a26a-40a6-b3d3-fb242a5947b6
    NewMovie:
      required:
        - date
        - movieid
      type: object
      properties:
        date:
          type: string
          example: "20151201"
        movieid:
          type: string
          example: 276c79ec-a26a-40a6-b3d3-fb242a5947b6
